<snippet>
    <content><![CDATA[
   - name:
 # Manages apt packages (such as for Debian/Ubuntu).
 - apt:
      allow_unauthenticated:      #yes/no                                     #default no                                     # Ignore if packages cannot be authenticated. This is useful for bootstrapping environments that manage their own apt-key setup.
      autoclean:                  #yes/no                                                                                     # If yes, cleans the local repository of retrieved package files that can no longer be downloaded.
      autoremove:                 #yes/no                                                                                     # If yes, remove unused dependency packages for all module states except build-dep. It can also be used as the only option.
      cache_valid_time:                                                                                                       # Update the apt cache if its older than the cache_valid_time. This option is set in seconds
      deb:                                                                                                                    # Path to a .deb package on the remote machine. If :// in the path, ansible will attempt to download deb before installing. 
      default_release:                                                                                                        # Corresponds to the -t option for apt and sets pin priorities
      dpkg_options:                                                           #default force-confdef,force-confold            # Add dpkg options to apt command. Defaults to '-o "Dpkg::Options::=--force-confdef" -o "Dpkg::Options::=--force-confold"' Options should be supplied as comma separated list
      force:                      #yes/no                                     #default no                                     # If yes, force installs/removes.
      force_apt_get:                                                                                                          # Force usage of apt-get instead of aptitude
      install_recommends:         #yes/no                                                                                     # Corresponds to the --no-install-recommends option for apt. yes installs recommended packages. no does not install recommended packages
      name: "{{ item }}"                                                                                                      # A package name, like foo, or package specifier with version, like foo=1.0. Name wildcards (fnmatch) like apt* and version wildcards like foo=1.0* are also supported
      only_upgrade:                                                                                                           # Only upgrade a package if it is already installed.
      purge:                      #yes/no                                                                                     # Will force purging of configuration files if the module state is set to absent.
      state:                      #latest/absent/present/build-dep            #default present                                # Indicates the desired package state. latest ensures that the latest version is installed. build-dep ensures the package build dependencies are installed.
      update_cache:               #yes/no                                                                                     # Run the equivalent of apt-get update before the operation. Can be run as part of the package installation or as a separate step
      upgrade:                    #yes/no/safe/full/dist                      #default no                                     # If yes or safe, performs an aptitude safe-upgrade. If full, performs an aptitude full-upgrade. If dist, performs an apt-get dist-upgrade.
   with_items:
      - 'packagename'
      - 'packagename'
]]></content>
    <tabTrigger>apt</tabTrigger>
    <scope>source.yaml</scope>
</snippet>