<snippet>
    <content><![CDATA[
  
 - name:
   # Downloads files from HTTP, HTTPS, or FTP to the remote server. The remote server must have direct access to the remote resource
 - get_url:
     attributes:                                #default None     # Attributes the file or directory should have. To get supported flags look at the man page for chattr on the target system
     backup:             #yes/no                #default no       # Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly
     checksum:                                                    # If a checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully
     client_cert:                                                 # PEM formatted certificate chain file to be used for SSL client authentication. This file can also include the key as well, and if the key is included, client_key is not required.
     client_key:                                                  # PEM formatted file that contains your private key to be used for SSL client authentication. If client_cert contains both the certificate and key, this option is not required
     dest:                          #required                     # Absolute path of where to download the file to. If dest is a directory, either the server provided filename or, if none provided, the base name of the URL on the remote server will be used. If a directory, force has no effect. If dest is a directory, the file will always be downloaded (regardless of the force option), but replaced only if the contents changed..
     force:              #yes/no                #default no       # If yes and dest is not a directory, will download the file every time and replace the file if the contents change. If no, the file will only be downloaded if the destination does not exist. Generally should be yes only for small local files
     force_basic_auth:   #yes/no                #default no       # httplib2, the library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail. This option forces the sending of the Basic authentication header upon initial request
     group:                                                       # Name of the group that should own the file/directory, as would be fed to chown
     headers:                                                     # Add custom HTTP headers to a request in the format "key:value,key:value".
     mode:                                                        # Mode the file or directory should be. For those used to /usr/bin/chmod remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, u+rwx or u=rw,g=r,o=r).
     others:                                                      # all arguments accepted by the file module also work here
     owner:                                                       # Name of the user that should own the file/directory, as would be fed to chown.
     selevel:                                   #default s0       # Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the range. _default feature works as for seuser
     serole:                                                      # Role part of SELinux file context, _default feature works as for seuser.
     setype:                                                      # Type part of SELinux file context, _default feature works as for seuser.
     seuser:                                                      # User part of SELinux file context. Will default to system policy, if applicable. If set to _default, it will use the user portion of the policy if available.
     sha256sum:                                                   # If a SHA-256 checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully
     timeout:                                   #default 10       # Timeout in seconds for URL request
     tmp_dest:                                                    # Absolute path of where temporary file is downloaded to. Defaults to TMPDIR, TEMP or TMP env variables or a platform specific value
     unsafe_writes:      #yes/no                                  # Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this
     url:                           #required                     # HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path
     url_password:                                                # The password for use in HTTP basic authentication. If the url_username parameter is not specified, the url_password parameter will not be used.
     url_username:                                                # The username for use in HTTP basic authentication. This parameter can be used without url_password for sites that allow empty passwords
     use_proxy:          #yes/no                #default yes      # If no, it will not use a proxy, even if one is defined in an environment variable on the target hosts
     validate_certs:     #yes/no                #default yes      # If no, SSL certificates will not be validated.

]]></content>
    <tabTrigger>get_url</tabTrigger>
    <scope>source.yaml</scope>
</snippet>