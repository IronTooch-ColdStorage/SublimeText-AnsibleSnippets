<snippet>
	<content><![CDATA[
 - name:
 # The unarchive module unpacks an archive.
 - unarchive:
     attributes:                                #default None   # Attributes the file or directory should have. To get supported flags look at the man page for chattr on the target system
     copy:              #yes/no                 #default yes    # If true, the file is copied from local 'master' to the target machine, otherwise, the plugin will look for src archive at the target machine
     creates:                                                   # A filename, when it already exists, this step will not be run.
     decrypt:           #yes/no                 #default yes    # This option controls the autodecryption of source files using vault.
     dest:                          #required                   # Remote absolute path where the archive should be unpacked.
     exclude:                                                   # List the directory and file entries that you would like to exclude from the unarchive action.
     extra_opts:                                                # Specify additional options by passing in an array.
     group:                                                     # Name of the group that should own the file/directory, as would be fed to chown.
     keep_newer:        #yes/no                 #default no     # Do not replace existing files that are newer than files from the archive.
     list_files:        #yes/no                 #default no     # If set to True, return the list of files that are contained in the tarball.
     mode:                                                      # Mode the file or directory should be. For those used to /usr/bin/chmod remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results
     owner:                                                     # Name of the user that should own the file/directory, as would be fed to chown.
     remote_src:        #yes/no                 #default no     # Set to yes to indicate the archived file is already on the remote system and not local to the Ansible controller
     selevel:                                   #default s0     # Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the range. _default feature works as for seuser
     serole:                                                    # Role part of SELinux file context, _default feature works as for seuser.
     setype:                                                    # Type part of SELinux file context, _default feature works as for seuser.
     seuser:                                                    # User part of SELinux file context. Will default to system policy, if applicable. If set to _default, it will use the user portion of the policy if available.
     src:                           #required                   # If remote_src=no (default), local path to archive file to copy to the target server; can be absolute or relative. If remote_src=yes, path on the target server to existing archive file to unpack. If remote_src=yes and src contains ://, the remote machine will download the file from the URL first
     unsafe_writes:     #yes/no                                 # Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this
     validate_certs:    #yes/no                 #default yes    # This only applies if using a https URL as the source of the file

]]></content>
	<tabTrigger>unarchive</tabTrigger>
	<scope>source.yaml</scope>
</snippet>
